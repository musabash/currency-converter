{"version":3,"sources":["all-context.js","components/currency-list.js","components/currency-selector.js","components/header.js","App.js","index.js"],"names":["AllContext","createContext","AllContextProvider","children","useState","exchangeCurrencies","setExchangeCurrencies","result","setResult","exchangeRate","setExchangeRate","searchQuery","setSearchQuery","countries","setCountries","currencies","setCurrencies","error","setError","values","setValues","currentInput","setCurrentInput","headerText","setHeaderText","webAddress","process","apiKey","value","getCountries","url","console","log","fetch","then","response","ok","json","Error","data","countriesArray","key","results","push","catch","err","getExchangeRate","query","getCurrencies","currenciesArray","sort","a","b","id","onChangeHandler","index","convertedValue","map","_","i","Number","toFixed","getApiUsage","Provider","CurrencyList","name","useContext","currency","setCurrency","currencyChooser","e","currencyName","exCur","elm","target","useEffect","className","type","onClick","onChange","toLowerCase","includes","defaultValue","CurrencySelector","min","onKeyDown","preventDefault","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.108af6ad.chunk.js","sourcesContent":["import React, {createContext, useState} from 'react'\r\n\r\nconst AllContext = createContext()\r\n\r\nfunction AllContextProvider({children}) {\r\n  const [exchangeCurrencies, setExchangeCurrencies] = useState(['GBP', 'USD'])\r\n  const [result, setResult] = useState('')\r\n  const [exchangeRate, setExchangeRate] = useState('')\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [countries, setCountries] = useState([])\r\n  const [currencies, setCurrencies] = useState([])\r\n  const [error, setError] = useState('')\r\n  const [values, setValues] = useState([1, ''])\r\n  const [currentInput, setCurrentInput] = useState('')\r\n  const [headerText, setHeaderText] = useState(['British Pound', 'United States Dollar'])\r\n\r\n  const webAddress = process.env.REACT_APP_WEB_ADDRESS\r\n  const apiKey = process.env.REACT_APP_API_KEY\r\n\r\n  function getApiUsage() {\r\n    const url = `https://free.currconv.com/others/usage?apiKey=${apiKey}`\r\n    fetch(url)\r\n      .then((response) => {\r\n          if (response.ok) {\r\n              return response.json()\r\n          } else {\r\n              throw new Error('Something went wrong.')\r\n          }\r\n      })\r\n      .then((data) => console.log(data))\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  \r\n  function getExchangeRate() {\r\n    const query = `${exchangeCurrencies[0]}_${exchangeCurrencies[1]}`\r\n    const url = `${webAddress}convert?q=${query}&compact=ultra&apiKey=${apiKey}`\r\n    fetch(url)\r\n      .then((response) => {\r\n          if (response.ok) {\r\n              return response.json()\r\n          } else {\r\n              return response.error\r\n          }\r\n      })\r\n      .then((data) => setExchangeRate(data[query]))\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  function getCurrencies() {\r\n    const url = `${webAddress}currencies?apiKey=${apiKey}`\r\n    fetch(url)\r\n      .then((response) => {\r\n          if (response.ok) {\r\n              return response.json()\r\n          } else {\r\n              throw new Error('Something went wrong')\r\n          }\r\n      })\r\n      .then((data) => {\r\n        const currenciesArray = []\r\n        for (let key in data.results) {\r\n          currenciesArray.push(data.results[key]);\r\n        }\r\n        setCurrencies(currenciesArray.sort((a, b) => a.id > b.id ? 1 : -1))\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n    \r\n  function getCountries() {\r\n    const url = `${webAddress}countries?apiKey=${apiKey}`\r\n    console.log(url)\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response.json()\r\n        } else {\r\n            throw new Error('Something went wrong')\r\n        }\r\n      })\r\n      .then((data) => {\r\n        const countriesArray = []\r\n        for (let key in data.results) {\r\n          countriesArray.push(data.results[key]);\r\n        }\r\n          setCountries(countriesArray)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  function onChangeHandler(value, index) {\r\n    let convertedValue = 0\r\n    index === 0 ? convertedValue = value * exchangeRate : convertedValue = value / exchangeRate\r\n    setValues(values.map((_, i) => i === index ? value : Number(convertedValue.toFixed(6))))\r\n  }\r\n    \r\n  const value = {\r\n    exchangeCurrencies,\r\n    setExchangeCurrencies,\r\n    result,\r\n    setResult,\r\n    searchQuery,\r\n    setSearchQuery,\r\n    countries,\r\n    setCountries,\r\n    error,\r\n    setError,\r\n    getCountries,\r\n    getExchangeRate,\r\n    currencies,\r\n    getCurrencies,\r\n    values,\r\n    setValues,\r\n    currentInput,\r\n    setCurrentInput,\r\n    exchangeRate,\r\n    setExchangeRate,\r\n    onChangeHandler,\r\n    getApiUsage,\r\n    headerText,\r\n    setHeaderText\r\n  }\r\n  return (\r\n    <AllContext.Provider value={value}>\r\n        {children}\r\n    </AllContext.Provider>\r\n  )\r\n}\r\n\r\nexport {AllContext, AllContextProvider}","import {useContext, useEffect, useState} from 'react'\r\nimport {AllContext} from '../all-context'\r\n\r\nexport default function CurrencyList({name, index}){\r\n  const {currencies, searchQuery, currentInput, setSearchQuery, setCurrentInput, setExchangeCurrencies, exchangeCurrencies, getExchangeRate, onChangeHandler, exchangeRate, setHeaderText, headerText} = useContext(AllContext)\r\n  const [currency, setCurrency] = useState(exchangeCurrencies[index])\r\n\r\n  function currencyChooser(e, currencyName){\r\n    const exCur = exchangeCurrencies.map((elm, i) => i === index ? e.target.name : elm)\r\n    setExchangeCurrencies(exCur)\r\n    setCurrency(e.target.name)\r\n    setCurrentInput('')\r\n    setHeaderText(() => headerText.map((elm, i) => i === index ? currencyName : elm))\r\n    }\r\n  useEffect(() => {\r\n    getExchangeRate()\r\n  }, [exchangeCurrencies])\r\n\r\n  useEffect(() => {\r\n    onChangeHandler(1, 0)\r\n  }, [exchangeRate])\r\n\r\n  return (\r\n    <div className=\"currency-list-container\">\r\n      <input \r\n        className=\"currency-list-input\"\r\n        type=\"text\" \r\n        value={currency}\r\n        onClick={() => {\r\n          setCurrentInput(name)\r\n          setSearchQuery('')\r\n        }} \r\n        onChange={(e) => {\r\n          setSearchQuery(e.target.value)\r\n          setCurrency(e.target.value)\r\n        }\r\n        }/>\r\n      {currentInput === name &&\r\n        <div className=\"currency-list\">\r\n          {currencies.map((currency, index) => (currency.id + currency.currencyName).toLowerCase().includes(searchQuery.toLowerCase()) &&\r\n          <input \r\n            className=\"currency\"\r\n            onClick={(e) => currencyChooser(e, currency.currencyName)}\r\n            key={index}\r\n            name={currency.id}\r\n            defaultValue={`${currency.id} - ${currency.currencyName}`}/\r\n          >)}\r\n        </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, {useContext} from 'react'\r\nimport {AllContext} from '../all-context'\r\nimport CurrencyList from './currency-list'\r\n\r\nexport default function CurrencySelector({name, index}){\r\n  const { values, onChangeHandler } = useContext(AllContext)\r\n\r\n  const keyDownHandler = (e) => {\r\n    if(e.key === \"-\"){\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"currency-selector\">\r\n      <input\r\n        type=\"number\"\r\n        min=\"0\"\r\n        onKeyDown={keyDownHandler}\r\n        value={values[index]}  \r\n        onChange={(e) => onChangeHandler(e.target.value, index)}\r\n      />\r\n      <CurrencyList name={name} index={index}/>\r\n    </div>\r\n  )\r\n}","import {useContext} from 'react'\r\nimport {AllContext} from '../all-context'\r\n\r\nexport default function Header() {\r\n  const { exchangeRate, headerText } = useContext(AllContext)\r\n  return (\r\n    <div className=\"header\">\r\n      <h4>1 {headerText[0]} equals</h4>\r\n      <h3>{exchangeRate} {headerText[1]}</h3>\r\n    </div>\r\n  )\r\n}","import {useContext, useEffect} from 'react'\nimport {AllContext} from './all-context'\nimport CurrencySelector from './components/currency-selector'\nimport Header from './components/header'\n\nfunction App() {\n  const {getCurrencies, getExchangeRate, setCurrentInput} = useContext(AllContext)\n  \n  useEffect(() => {\n    getCurrencies()\n    getExchangeRate()\n  }, [])\n  \n  return (\n    <div className=\"app\" onClick={(e) => e.target.className !== 'currency-list-input' && setCurrentInput('')}>\n      <h1>Currency Converter</h1>\n      <Header />\n      <CurrencySelector name=\"from\" index={0}/>\n      <CurrencySelector name=\"to\" index={1}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {AllContextProvider} from './all-context'\n\nReactDOM.render(\n  <AllContextProvider>\n    <App />\n  </AllContextProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}